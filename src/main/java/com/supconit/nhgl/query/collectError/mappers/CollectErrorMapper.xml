<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://hc.supconit.com/mybatis-3-mapper.dtd">

<mapper namespace="com.supconit.nhgl.query.collectError.entities.CollectError">

	<resultMap type="com.supconit.nhgl.query.collectError.entities.CollectError" id="CollectErrorResultMap">      
        <result property="id" column="ID" />
        <result property="deviceCode" column="DEVICE_CODE" />
        <result property="deviceName" column="DEVICE_NAME" />
        <result property="deviceSpec" column="DEVICE_SPEC" />
        <result property="categoryId" column="CATEGORY_ID" />
        <result property="locationId" column="LOCATION_ID" />
        <result property="locationName" column="LOCATION_NAME" />
        <result property="useDepartmentId" column="USE_DEPARTMENT_ID" />
        <result property="manageDepartmentId" column="MANAGE_DEPARTMENT_ID" />
        <result property="managePersonIds" column="MANAGE_PERSON_IDS" />
        <result property="managePersonName" column="MANAGE_PERSON_NAME" />
        <result property="supplierId" column="SUPPLIER_ID" />
        <result property="maitainCycle" column="MAITAIN_CYCLE" />
        <result property="timeAfterMaintain" column="TIME_AFTER_MAINTAIN" />
        <result property="totalRunningTime" column="TOTAL_RUNNING_TIME" />
        <result property="specialStatus" column="SPECIAL_STATUS" />
        <result property="barcode" column="BARCODE" />
        <result property="prduceDate" column="PRDUCE_DATE" />
        <result property="assetsCode" column="ASSETS_CODE" />
        <result property="enableDate" column="ENABLE_DATE" />
        <result property="status" column="STATUS" />
        <result property="assetsCost" column="ASSETS_COST" />
        <result property="assetsResidual" column="ASSETS_RESIDUAL" />
        <result property="depreciationAlgorithm" column="DEPRECIATION_ALGORITHM" />
        <result property="depreciationRate" column="DEPRECIATION_RATE" />
        <result property="depreciationYears" column="DEPRECIATION_YEARS" />
        <result property="mapDisplay" column="MAP_DISPLAY" />
        <result property="smallType" column="SMALL_TYPE" />
        <result property="createId" column="CREATE_ID" />
        <result property="creator" column="CREATOR" />
        <result property="createDate" column="CREATE_DATE" />
        <result property="updateId" column="UPDATE_ID" />
        <result property="updator" column="UPDATOR" />
        <result property="updateDate" column="UPDATE_DATE" />
        <result property="hpid" column="HPID" />
        <result property="discipinesCode" column="DISCIPINES_CODE"/>
        <result property="extended1" column="EXTENDED1"/>
        <result property="energyCode" column="ENERGY_CODE"/>
        <result property="serviceArea" column="SERVICE_AREA"/>
        <result property="humanConfirm" column="HUMAN_CONFIRM"/>
        
        
        <result property="subName" column="SUB_NAME"/>
        <result property="subCode" column="SUB_CODE"/>
        <result property="lastTotal" column="LAST_READ_DATA" />
        <result property="total" column="CUR_READ_DATA" />
        <result property="incremental" column="INCREMENTAL" />
        <result property="collectTime" column="COLLECT_TIME" />
        <result property="useDepartmentName" column="USE_DEPARTMENT_NAME" />
        
	</resultMap>
	<sql id="column_device1" lang="velocity">
		A.ID,
		A.DEVICE_CODE,
		A.DEVICE_NAME,
		A.DEVICE_SPEC,
		A.CATEGORY_ID,
		A.LOCATION_ID,
		A.LOCATION_NAME,
		A.USE_DEPARTMENT_ID,
		A.MANAGE_DEPARTMENT_ID,
		A.MANAGE_PERSON_IDS,
		A.MANAGE_PERSON_NAME,
		A.SUPPLIER_ID,
		A.MAITAIN_CYCLE,
		A.TIME_AFTER_MAINTAIN,
		A.TOTAL_RUNNING_TIME,
		A.SPECIAL_STATUS,
		A.BARCODE,
		A.PRDUCE_DATE,
		A.ASSETS_CODE,
		A.ENABLE_DATE,
		A.STATUS,
		A.ASSETS_COST,
		A.ASSETS_RESIDUAL,
		A.DEPRECIATION_ALGORITHM,
		A.DEPRECIATION_RATE,
		A.DEPRECIATION_YEARS,
		A.MAP_DISPLAY,
		A.SMALL_TYPE,
		A.CREATE_ID,
		A.CREATOR,
		A.CREATE_DATE,
		A.UPDATE_ID,
		A.UPDATOR,
		A.UPDATE_DATE,
		A.HPID,
		A.DISCIPINES_CODE,
		A.EXTENDED1,
		A.ENERGY_CODE,
		A.SERVICE_AREA
	</sql>
	
    
	<select id="findById" parameterType="long" resultMap="CollectErrorResultMap" lang="velocity">
        select
        *
		FROM
		NH_ERROR_DATA A
        where a.ID = @{_parameter.id,jdbcType=NUMERIC}
    </select>
    
    <sql id="condition_all_sql1" lang="velocity">
    <![CDATA[
    	#where()
    		#set($_p = $_parameter.condition)
			1=1
			#if($_p.nhType)
				#set($_nhType=$_p.nhType)
				and t.NH_TYPE = @{_nhType,jdbcType=BIGINT}
			#end
			#if($_p.humanConfirm)
				#set($_humanConfirm=$_p.humanConfirm)
				and t.HUMAN_CONFIRM = @{_humanConfirm,jdbcType=VARCHAR}
			#end
			#if($_p.energyCode && $_p.energyCode!='')
				#set($_energyCode='%' +$_p.energyCode+ '%')
				and t2.ENERGY_CODE like @{_energyCode,jdbcType=VARCHAR}
			#end
			#if($_p.deviceName && $_p.deviceName!='')
				#set($_deviceName='%' +$_p.deviceName+ '%')
				and t2.DEVICE_NAME like @{_deviceName,jdbcType=VARCHAR}
			#end
			#if($_p.startTime && $_p.startTime!='')
				#set($_startTime=$_p.startTime)
				and t.COLLECT_TIME >=
				#if($_databaseId=='oracle')
					TO_DATE(@{_startTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24-mi-ss')
				#else
					@{_startTime,jdbcType=VARCHAR}
				#end
			#end
			#if($_p.endTime && $_p.endTime!='')
				#set($_endTime=$_p.endTime)
				and t.COLLECT_TIME <=
				#if($_databaseId=='oracle')
					TO_DATE(@{_endTime,jdbcType=VARCHAR},'yyyy-mm-dd hh24-mi-ss')
				#else
					@{_endTime,jdbcType=VARCHAR}
				#end
			#end
    	#end
		]]>
    </sql>
    
    
    <sql id="findFirstForWith1" lang="velocity">
		WITH AREA(ID,PARENT_ID,AREA_NAME,FULL_LEVEL_NAME,SORT) AS(
			SELECT A.ID,A.PARENT_ID,A.AREA_NAME,A.FULL_LEVEL_NAME,A.SORT FROM NH_AREA A WHERE
			#if($_parameter.condition.locationId==0)
				A.PARENT_ID=@{_parameter.condition.locationId}
			#else
			 	A.ID=@{_parameter.condition.locationId}
			 	#end
			UNION ALL
			SELECT B.ID,B.PARENT_ID,B.AREA_NAME,B.FULL_LEVEL_NAME,B.SORT FROM NH_AREA B INNER JOIN AREA ON B.PARENT_ID=AREA.ID
		)
	</sql>
	
   <sql id="select_electric_pre1" lang="velocity">
        SELECT  t2.energy_code,t2.device_name,t3.full_level_name as serviceArea,t1.name as subName,t.id,t.HUMAN_CONFIRM,t.LAST_READ_DATA,t.CUR_READ_DATA,t.INCREMENTAL,t.COLLECT_TIME 
		FROM NH_ERROR_DATA t 
		INNER JOIN 
		#if($_databaseId=='oracle') 
        	 table(Func_getNhItem(1,@{_parameter.condition.subCode,jdbcType=VARCHAR})) t1
        #else 
        	Func_getNhItem(1,@{_parameter.condition.subCode}) t1
        #end
		 ON t.ITEM_CODE=t1.standard_code
		INNER JOIN DEVICE t2 ON t.DEVICE_ID=t2.id
		INNER JOIN AREA t3 ON t2.service_area_id=t3.id  
    </sql>
    <sql id="select_water_pre1" lang="velocity">
        SELECT  t2.energy_code,t2.device_name,t3.full_level_name as serviceArea,t1.name as subName,t.id,t.HUMAN_CONFIRM,t.LAST_READ_DATA,t.CUR_READ_DATA,t.INCREMENTAL,t.COLLECT_TIME 
		FROM NH_ERROR_DATA t 
		INNER JOIN 
		#if($_databaseId=='oracle') 
        	 table(Func_getNhItem(2,@{_parameter.condition.subCode,jdbcType=VARCHAR})) t1
        #else 
        	Func_getNhItem(2,@{_parameter.condition.subCode}) t1
        #end 
		ON t.ITEM_CODE=t1.standard_code
		INNER JOIN DEVICE t2 ON t.DEVICE_ID=t2.id
		INNER JOIN AREA t3 ON t2.service_area_id=t3.id  
    </sql>
     <sql id="select_gas_pre1" lang="velocity">
        SELECT  t2.energy_code,t2.device_name,t3.full_level_name as serviceArea,t1.name as subName,t.id,t.HUMAN_CONFIRM,t.LAST_READ_DATA,t.CUR_READ_DATA,t.INCREMENTAL,t.COLLECT_TIME 
		FROM NH_ERROR_DATA t 
		INNER JOIN 
		#if($_databaseId=='oracle') 
        	 table(Func_getNhItem(3,@{_parameter.condition.subCode,jdbcType=VARCHAR})) t1
        #else 
        	Func_getNhItem(3,@{_parameter.condition.subCode}) t1
        #end
	    ON t.ITEM_CODE=t1.standard_code
		INNER JOIN DEVICE t2 ON t.DEVICE_ID=t2.id
		INNER JOIN AREA t3 ON t2.service_area_id=t3.id  
    </sql>
    <sql id="select_energy_pre1" lang="velocity">
        SELECT  t2.energy_code,t2.device_name,t3.full_level_name as serviceArea,t1.name as subName,t.id,t.HUMAN_CONFIRM,t.LAST_READ_DATA,t.CUR_READ_DATA,t.INCREMENTAL,t.COLLECT_TIME 
		FROM NH_ERROR_DATA t 
		INNER JOIN 
		#if($_databaseId=='oracle') 
        	 table(Func_getNhItem(4,@{_parameter.condition.subCode,jdbcType=VARCHAR})) t1
        #else 
        	Func_getNhItem(4,@{_parameter.condition.subCode}) t1
        #end
		ON t.ITEM_CODE=t1.standard_code
		INNER JOIN DEVICE t2 ON t.DEVICE_ID=t2.id
		INNER JOIN AREA t3 ON t2.service_area_id=t3.id  
    </sql>
    
    <!-- 按条件查询记录-->
	<select id="findByCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity" databaseId="oracle">
		<include refid="_PUBLIC_V.PAGER_BEFORE"/>
		<include refid="findFirstForWith1"/> 
		<include refid="select_electric_pre1"/>
         <include refid="condition_all_sql1"/>
         #order($_parameter.condition,"t.COLLECT_TIME DESC,t.DEVICE_ID DESC")
		<include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
	<select id="findByCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity" databaseId="sqlserver">
		<include refid="findFirstForWith1"/> 
		<include refid="_PUBLIC_V.PAGER_BEFORE"/>
		SELECT  t2.energy_code,t2.device_name,t3.full_level_name as serviceArea,t1.name as subName,t.id,t.HUMAN_CONFIRM,t.LAST_READ_DATA as lastTotal,
   		t.CUR_READ_DATA as total,t.INCREMENTAL,t.COLLECT_TIME
   		<include refid="_PUBLIC_V.ROW_NUMBER_OVER" /> 
 		#order($_parameter.condition,"t.COLLECT_TIME DESC,t.DEVICE_ID DESC")
 		<include refid="_PUBLIC_V.AS_ROW_NUM" />
		FROM NH_ERROR_DATA t 
		INNER JOIN Func_getNhItem(1,@{_parameter.condition.subCode}) t1 ON t.ITEM_CODE=t1.standard_code
		INNER JOIN DEVICE t2 ON t.DEVICE_ID=t2.id
		INNER JOIN AREA t3 ON t2.service_area_id=t3.id
	   <include refid="condition_all_sql1"/>
	   <include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
	
	<select id="findByWaterCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity" databaseId="oracle">
       <include refid="_PUBLIC_V.PAGER_BEFORE"/>
		<include refid="findFirstForWith1"/> 
		<include refid="select_water_pre1" />
         <include refid="condition_all_sql1"/>
         #order($_parameter.condition,"t.COLLECT_TIME DESC,t.DEVICE_ID DESC")
		<include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
	<select id="findByWaterCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity" databaseId="sqlserver">
       <include refid="findFirstForWith1"/> 
		<include refid="_PUBLIC_V.PAGER_BEFORE"/>
		SELECT  t2.energy_code,t2.device_name,t3.full_level_name as serviceArea,t1.name as subName,t.id,t.HUMAN_CONFIRM,t.LAST_READ_DATA as lastTotal,
   		t.CUR_READ_DATA as total,t.INCREMENTAL,t.COLLECT_TIME
   		<include refid="_PUBLIC_V.ROW_NUMBER_OVER" /> 
 		#order($_parameter.condition,"t.COLLECT_TIME DESC,t.DEVICE_ID DESC")
 		<include refid="_PUBLIC_V.AS_ROW_NUM" />
		FROM NH_ERROR_DATA t 
		INNER JOIN Func_getNhItem(2,@{_parameter.condition.subCode}) t1 ON t.ITEM_CODE=t1.standard_code
		INNER JOIN DEVICE t2 ON t.DEVICE_ID=t2.id
		INNER JOIN AREA t3 ON t2.service_area_id=t3.id
	   <include refid="condition_all_sql1"/>
	   <include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
	
    <select id="findByGasCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity" databaseId="oracle">
         <include refid="_PUBLIC_V.PAGER_BEFORE"/>
		<include refid="findFirstForWith1"/> 
		 <include refid="select_gas_pre1" />
         <include refid="condition_all_sql1"/>
         #order($_parameter.condition,"t.COLLECT_TIME DESC,t.DEVICE_ID DESC")
		<include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
	<select id="findByGasCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity" databaseId="sqlserver">
        <include refid="findFirstForWith1"/> 
		<include refid="_PUBLIC_V.PAGER_BEFORE"/>
		SELECT  t2.energy_code,t2.device_name,t3.full_level_name as serviceArea,t1.name as subName,t.id,t.HUMAN_CONFIRM,t.LAST_READ_DATA as lastTotal,
   		t.CUR_READ_DATA as total,t.INCREMENTAL,t.COLLECT_TIME
   		<include refid="_PUBLIC_V.ROW_NUMBER_OVER" /> 
 		#order($_parameter.condition,"t.COLLECT_TIME DESC,t.DEVICE_ID DESC")
 		<include refid="_PUBLIC_V.AS_ROW_NUM" />
		FROM NH_ERROR_DATA t 
		INNER JOIN Func_getNhItem(3,@{_parameter.condition.subCode}) t1 ON t.ITEM_CODE=t1.standard_code
		INNER JOIN DEVICE t2 ON t.DEVICE_ID=t2.id
		INNER JOIN AREA t3 ON t2.service_area_id=t3.id
	   <include refid="condition_all_sql1"/>
	   <include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
   
	<select id="findByEnergyCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity" databaseId="oracle">
        <include refid="_PUBLIC_V.PAGER_BEFORE"/>
		<include refid="findFirstForWith1"/> 
		<include refid="select_energy_pre1" />
        <include refid="condition_all_sql1"/>
        #order($_parameter.condition,"t.COLLECT_TIME DESC,t.DEVICE_ID DESC")
		<include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
	<select id="findByEnergyCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity" databaseId="sqlserver">
        <include refid="findFirstForWith1"/> 
		<include refid="_PUBLIC_V.PAGER_BEFORE"/>
		SELECT  t2.energy_code,t2.device_name,t3.full_level_name as serviceArea,t1.name as subName,t.id,t.HUMAN_CONFIRM,t.LAST_READ_DATA as lastTotal,
   		t.CUR_READ_DATA as total,t.INCREMENTAL,t.COLLECT_TIME
   		<include refid="_PUBLIC_V.ROW_NUMBER_OVER" /> 
 		#order($_parameter.condition,"t.COLLECT_TIME DESC,t.DEVICE_ID DESC")
 		<include refid="_PUBLIC_V.AS_ROW_NUM" />
		FROM NH_ERROR_DATA t 
		INNER JOIN Func_getNhItem(4,@{_parameter.condition.subCode}) t1 ON t.ITEM_CODE=t1.standard_code
		INNER JOIN DEVICE t2 ON t.DEVICE_ID=t2.id
		INNER JOIN AREA t3 ON t2.service_area_id=t3.id
	   <include refid="condition_all_sql1"/>
	   <include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
	
    <select id="countByCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultType="long" lang="velocity">
		<include refid="findFirstForWith1"/> 
		SELECT count(*) co from(
			<include refid="select_electric_pre1" />
		    <include refid="condition_all_sql1" />
	    ) s
	</select>
	<select id="countWaterByCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultType="long" lang="velocity">
		<include refid="findFirstForWith1"/> 
		SELECT count(*) co from(
			<include refid="select_water_pre1" />
		    <include refid="condition_all_sql1" />
	    ) s
	</select>
	<select id="countGasByCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultType="long" lang="velocity">
		<include refid="findFirstForWith1"/> 
		SELECT count(*) co from(
			<include refid="select_gas_pre1" />
		    <include refid="condition_all_sql1" />
	    ) s
	</select>
    <select id="countEnergyByCondition" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultType="long" lang="velocity">
		<include refid="findFirstForWith1"/> 
		SELECT count(*) co from(
			<include refid="select_energy_pre1" />
		    <include refid="condition_all_sql1" />
	    ) s
	</select>
	
	<select id="findByBitNo" parameterType="java.lang.String" resultMap="CollectErrorResultMap">
		select ID from DEVICE where EXTENDED1 = #{bitNo}
	</select>   
	
	<!-- 电表按条件查询记录 start-->
	<select id="findByConditionPower" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity">
		<include refid="_PUBLIC_V.PAGER_BEFORE"/>
		select
        <include refid="column_device1" />
        ,dpu.NAME USE_DEPARTMENT_NAME,sub.NAME SUB_NAME
        from DEVICE A 
        INNER JOIN DEVICE_CATEGORY DC
        ON A.CATEGORY_ID = DC.ID AND DC.CATEGORY_CODE = @{_parameter.condition.barcode, jdbcType=VARCHAR}
        LEFT JOIN HO_DEPARTMENT dpu
        ON A.USE_DEPARTMENT_ID = dpu.ID 
        LEFT JOIN NH_SUB_SYSTEM_INFO sub
        ON A.DISCIPINES_CODE = sub.STANDARD_CODE
		<include refid="condition_sql_power1" />
		#order($_parameter.condition,"a.id")
		<include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
	<select id="findByConditionPower" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultMap="CollectErrorResultMap" lang="velocity" databaseId="sqlserver">
		<include refid="_PUBLIC_V.PAGER_BEFORE"/>
		select
        <include refid="column_device1" />
        ,dpu.NAME USE_DEPARTMENT_NAME,sub.NAME SUB_NAME
        from 
        <include refid="_PUBLIC_V.ROW_NUMBER_OVER" /> 
 		#order($_parameter.condition,"a.id")
 		<include refid="_PUBLIC_V.AS_ROW_NUM" />
        DEVICE A 
        INNER JOIN DEVICE_CATEGORY DC
        ON A.CATEGORY_ID = DC.ID AND DC.CATEGORY_CODE = @{_parameter.condition.barcode, jdbcType=VARCHAR}
        LEFT JOIN HO_DEPARTMENT dpu
        ON A.USE_DEPARTMENT_ID = dpu.ID 
        LEFT JOIN NH_SUB_SYSTEM_INFO sub
        ON A.DISCIPINES_CODE = sub.STANDARD_CODE
		<include refid="condition_sql_power1" />
		<include refid="_PUBLIC_V.PAGER_AFTER"/>
	</select>
	<select id="countByConditionPower" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError" resultType="long" lang="velocity">
		SELECT
		COUNT(*)
		FROM
		dbo.DEVICE A
		INNER JOIN DEVICE_CATEGORY DC
        ON A.CATEGORY_ID = DC.ID AND DC.CATEGORY_CODE = @{_parameter.condition.barcode, jdbcType=VARCHAR}
		<include refid="condition_sql_power1" />
	</select>
	<sql id="condition_sql_power1" lang="velocity">
    <![CDATA[
    	#where()
    		#set($_p = $_parameter.condition)
			1=1
			#if($_p.deviceCode && $_p.deviceCode!='')
				#set($_deviceCode='%' +$_p.deviceCode+ '%')
				and A.DEVICE_CODE like @{_deviceCode,jdbcType=VARCHAR}
			#end
			#if($_p.deviceName && $_p.deviceName!='')
				#set($_deviceName='%' +$_p.deviceName+ '%')
				and A.DEVICE_NAME like @{_deviceName,jdbcType=VARCHAR}
			#end
			#if($_p.extended1 && $_p.extended1!='')
				#set($_extended1='%' +$_p.extended1+ '%')
				and A.EXTENDED1 like @{_extended1,jdbcType=VARCHAR}
			#end
			#if($_p.discipinesCode && $_p.discipinesCode!='')
				#set($_discipinesCode='%' +$_p.discipinesCode+ '%')
				and A.DISCIPINES_CODE like @{_discipinesCode,jdbcType=VARCHAR}
			#end
			#if($_p.lstLocationId && $_p.lstLocationId.size()>0)	
				#set($_lstLocationId =$_p.lstLocationId)
				and 
				#repeat( $_lstLocationId $ids "," " A.LOCATION_ID IN (" ")" )
				    @{ids,jdbcType=BIGINT}
				#end	
			#end
			#if($_p.lstDepartmentId && $_p.lstDepartmentId.size()>0)	
				#set($_lstDepartmentId =$_p.lstDepartmentId)
				and 
				#repeat( $_lstDepartmentId $ids "," " dpu.ID IN (" ")" )
				    @{ids,jdbcType=BIGINT}
				#end	
			#end
    	#end
		]]>	
	</sql>
	<!-- 电表按条件查询记录 end-->
	
	<!-- 更新记录-->
	<update id="update" parameterType="com.supconit.nhgl.query.collectError.entities.CollectError">
		UPDATE NH_ERROR_DATA
		<set>
        <if test="humanConfirm != null">HUMAN_CONFIRM = #{humanConfirm,jdbcType=VARCHAR},</if>
		</set>
		WHERE ID = #{id}
	</update>
</mapper>